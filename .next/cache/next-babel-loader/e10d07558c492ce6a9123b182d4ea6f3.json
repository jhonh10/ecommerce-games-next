{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport BasicLayout from '../../layouts/BasicLayout';\nimport { useRouter } from 'next/router';\nimport { getGamesPlatformApi, getTotalGamesPlatformApi } from '../../api/game';\nimport { size } from 'lodash';\nimport { Loader } from 'semantic-ui-react';\nimport ListGames from '../../components/ListGames';\nimport Pagination from '../../components/Pagination';\nimport Seo from '../../components/Seo';\nconst limitPerPage = 1;\nexport default function Platform() {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: games,\n    1: setGames\n  } = useState(null);\n  const {\n    0: totalGames,\n    1: setTotalGames\n  } = useState(null);\n\n  const getStartItem = () => {\n    const currentPage = parseInt(query.page);\n    if (!query.page || currentPage === 1) return 0;else return currentPage * limitPerPage - limitPerPage;\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (query.platform) {\n        const response = await getGamesPlatformApi(query.platform, limitPerPage, getStartItem());\n        setGames(response);\n      }\n    })();\n  }, [query]);\n  useEffect(() => {\n    (async () => {\n      const response = await getTotalGamesPlatformApi(query.platform);\n      setTotalGames(response);\n    })();\n  }, [query]);\n  return /*#__PURE__*/_jsxs(BasicLayout, {\n    className: \"platform\",\n    children: [/*#__PURE__*/_jsx(Seo, {\n      title: `Juegos - ${query.platform}`\n    }), !games && /*#__PURE__*/_jsx(Loader, {\n      active: true,\n      children: \"Cargando...\"\n    }), games && size(games) === 0 && /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"No hay juegos\"\n      })\n    }), size(games) > 0 && /*#__PURE__*/_jsx(ListGames, {\n      games: games\n    }), totalGames ? /*#__PURE__*/_jsx(Pagination, {\n      totalGames: totalGames,\n      page: query.page ? parseInt(query.page) : 1,\n      limitPerPage: limitPerPage\n    }) : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}