{"ast":null,"code":"import _defineProperty from \"C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\Proyectos React\\\\ecomemrce-next\\\\client\\\\components\\\\Game\\\\CarouselScreenshots\\\\CarouselScreenshots.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { Image, Modal } from 'semantic-ui-react';\nimport Slider from 'react-slick';\nimport { map } from 'lodash';\nvar settings = {\n  className: \"carousel-screenshots\",\n  dots: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 4,\n  swipeToSlider: true\n};\nexport default function CarouselScreenshots(_ref) {\n  _s();\n\n  var _this = this;\n\n  var screenshots = _ref.screenshots,\n      title = _ref.title;\n\n  var _useState = useState(false),\n      showModal = _useState[0],\n      setShowModal = _useState[1];\n\n  var _useState2 = useState(null),\n      urlImage = _useState2[0],\n      setUrlImage = _useState2[1];\n\n  var openImage = function openImage(url) {\n    setUrlImage(url);\n    setShowModal(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n      children: map(screenshots, function (screenshot) {\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: screenshot.url,\n          alt: title,\n          onClick: function onClick() {\n            return openImage(screenshot.url);\n          }\n        }, screenshot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      onClose: function onClose() {\n        return setShowModal(false);\n      },\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: urlImage,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CarouselScreenshots, \"S8xy7z2Lo5xLOe9DS1f3sNG6jWI=\");\n\n_c = CarouselScreenshots;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarouselScreenshots\");","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/components/Game/CarouselScreenshots/CarouselScreenshots.js"],"names":["useState","Image","Modal","Slider","map","settings","className","dots","infinite","speed","slidesToShow","swipeToSlider","CarouselScreenshots","screenshots","title","showModal","setShowModal","urlImage","setUrlImage","openImage","url","screenshot","id"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,SAAS,EAAE,sBADE;AAEbC,EAAAA,IAAI,EAAE,KAFO;AAGbC,EAAAA,QAAQ,EAAE,IAHG;AAIbC,EAAAA,KAAK,EAAE,GAJM;AAKbC,EAAAA,YAAY,EAAE,CALD;AAMbC,EAAAA,aAAa,EAAE;AANF,CAAjB;AAQA,eAAe,SAASC,mBAAT,OAAqD;AAAA;;AAAA;;AAAA,MAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBAC9Bd,QAAQ,CAAC,KAAD,CADsB;AAAA,MACzDe,SADyD;AAAA,MAC9CC,YAD8C;;AAAA,mBAEhChB,QAAQ,CAAC,IAAD,CAFwB;AAAA,MAEzDiB,QAFyD;AAAA,MAE/CC,WAF+C;;AAIhE,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACvBF,IAAAA,WAAW,CAACE,GAAD,CAAX;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI,QAAC,MAAD,kCAAYX,QAAZ;AAAA,gBACKD,GAAG,CAACS,WAAD,EAAc,UAACQ,UAAD;AAAA,4BACd,QAAC,KAAD;AAEI,UAAA,GAAG,EAAEA,UAAU,CAACD,GAFpB;AAGI,UAAA,GAAG,EAAEN,KAHT;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMK,SAAS,CAACE,UAAU,CAACD,GAAZ,CAAf;AAAA;AAJb,WACSC,UAAU,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,OAAd;AADR;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEP,SAAb;AAAwB,MAAA,OAAO,EAAE;AAAA,eAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,OAAjC;AAA4D,MAAA,IAAI,EAAC,OAAjE;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEC,QAAZ;AAAsB,QAAA,GAAG,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAiBH;;GA1BuBF,mB;;KAAAA,mB","sourcesContent":["import { useState } from 'react'\r\nimport { Image, Modal } from 'semantic-ui-react';\r\nimport Slider from 'react-slick';\r\nimport { map } from 'lodash';\r\n\r\nconst settings = {\r\n    className: \"carousel-screenshots\",\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    swipeToSlider: true,\r\n};\r\nexport default function CarouselScreenshots({ screenshots, title }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [urlImage, setUrlImage] = useState(null);\r\n\r\n    const openImage = (url) => {\r\n        setUrlImage(url);\r\n        setShowModal(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings} >\r\n                {map(screenshots, (screenshot) => (\r\n                    <Image\r\n                        key={screenshot.id}\r\n                        src={screenshot.url}\r\n                        alt={title}\r\n                        onClick={() => openImage(screenshot.url)}\r\n                    />\r\n                ))}\r\n            </Slider>\r\n            <Modal open={showModal} onClose={() => setShowModal(false)} size=\"large\">\r\n                <Image src={urlImage} alt={title} />\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}