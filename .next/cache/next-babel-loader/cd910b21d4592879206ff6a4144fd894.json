{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getToken, hasExpiredToken } from '../api/token';\nexport async function authFetch(url, params, logout) {\n  const token = getToken();\n\n  if (!token) {\n    //usuario no logueado\n    logout();\n  } else {\n    if (hasExpiredToken(token)) {\n      //token expirado\n      logout();\n    } else {\n      const paramsTemp = _objectSpread(_objectSpread({}, params), {}, {\n        headers: _objectSpread(_objectSpread({}, params === null || params === void 0 ? void 0 : params.headers), {}, {\n          Authorization: `Bearer ${token}`\n        })\n      });\n\n      try {\n        const response = await fetch(url, paramsTemp);\n        const result = await response.json();\n        return result;\n      } catch (error) {\n        console.log(error);\n        return error;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/utils/fetch.js"],"names":["getToken","hasExpiredToken","authFetch","url","params","logout","token","paramsTemp","headers","Authorization","response","fetch","result","json","error","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,cAA1C;AAEA,OAAO,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8C;AACjD,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;;AACA,MAAI,CAACM,KAAL,EAAY;AACR;AACAD,IAAAA,MAAM;AACT,GAHD,MAGO;AACH,QAAIJ,eAAe,CAACK,KAAD,CAAnB,EAA4B;AACxB;AACAD,MAAAA,MAAM;AACT,KAHD,MAGO;AACH,YAAME,UAAU,mCACTH,MADS;AAEZI,QAAAA,OAAO,kCACAJ,MADA,aACAA,MADA,uBACAA,MAAM,CAAEI,OADR;AAEHC,UAAAA,aAAa,EAAG,UAASH,KAAM;AAF5B;AAFK,QAAhB;;AAOA,UAAI;AACA,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMI,UAAN,CAA5B;AACA,cAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,eAAOD,MAAP;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAOA,KAAP;AACH;AACJ;AACJ;AACJ","sourcesContent":["import { getToken, hasExpiredToken } from '../api/token';\r\n\r\nexport async function authFetch(url, params, logout) {\r\n    const token = getToken();\r\n    if (!token) {\r\n        //usuario no logueado\r\n        logout();\r\n    } else {\r\n        if (hasExpiredToken(token)) {\r\n            //token expirado\r\n            logout();\r\n        } else {\r\n            const paramsTemp = {\r\n                ...params,\r\n                headers: {\r\n                    ...params?.headers,\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            try {\r\n                const response = await fetch(url, paramsTemp);\r\n                const result = await response.json();\r\n                return result;\r\n            } catch (error) {\r\n                console.log(error)\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}