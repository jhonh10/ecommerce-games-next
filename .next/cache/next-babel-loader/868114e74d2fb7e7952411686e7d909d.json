{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\ecomemrce-next\\\\client\\\\components\\\\Account\\\\ChangePasswordForm\\\\ChangePasswordForm.js\";\nimport { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { updatePasswordApi } from '../../../api/user';\nexport default function ChangePasswordForm({\n  user,\n  logout\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await updatePasswordApi(user.id, formData.password, logout);\n      if (response) setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-password-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cambia tu contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Nueva contrase\\xF1a\",\n          onChange: formik.handleChange,\n          value: formik.values.password,\n          error: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"repeatEmail\",\n          type: \"password\",\n          placeholder: \"Confirma tu nueva contrase\\xF1a\",\n          onChange: formik.handleChange,\n          value: formik.values.repeatPassword,\n          error: formik.errors.repeatPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit\",\n        loading: loading,\n        disabled: loading,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\nfunction initialValues() {\n  return {\n    password: \"\",\n    repeatPassword: \"\"\n  };\n}\n\n;\n\nfunction validationSchema() {\n  return {\n    password: Yup.string().required(true),\n    repeatPassword: Yup.string().required()\n  };\n}\n\n;","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/components/Account/ChangePasswordForm/ChangePasswordForm.js"],"names":["useState","Form","Button","useFormik","Yup","toast","updatePasswordApi","ChangePasswordForm","user","logout","loading","setLoading","formik","initialValues","validationSchema","object","onSubmit","formData","response","id","password","handleSubmit","handleChange","values","errors","repeatPassword","string","required"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5B,EAA8C;AACzD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMY,MAAM,GAAGT,SAAS,CAAC;AACrBU,IAAAA,aAAa,EAAEA,aAAa,EADP;AAErBC,IAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,CAAWD,gBAAgB,EAA3B,CAFG;AAGrBE,IAAAA,QAAQ,EAAE,MAAOC,QAAP,IAAoB;AAC1BN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMO,QAAQ,GAAG,MAAMZ,iBAAiB,CAACE,IAAI,CAACW,EAAN,EAAUF,QAAQ,CAACG,QAAnB,EAA6BX,MAA7B,CAAxC;AACA,UAAIS,QAAJ,EACIP,UAAU,CAAC,KAAD,CAAV;AACP;AARoB,GAAD,CAAxB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,MAAM,CAACS,YAAvB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC,OAAnB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,qBAHhB;AAII,UAAA,QAAQ,EAAET,MAAM,CAACU,YAJrB;AAKI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAcH,QALzB;AAMI,UAAA,KAAK,EAAER,MAAM,CAACY,MAAP,CAAcJ;AANzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,IAAI,EAAC,aADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,iCAHhB;AAII,UAAA,QAAQ,EAAER,MAAM,CAACU,YAJrB;AAKI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAcE,cALzB;AAMI,UAAA,KAAK,EAAEb,MAAM,CAACY,MAAP,CAAcC;AANzB;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEf,OAApC;AAA6C,QAAA,QAAQ,EAAEA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;AAED,SAASG,aAAT,GAAyB;AACrB,SAAO;AACHO,IAAAA,QAAQ,EAAE,EADP;AAEHK,IAAAA,cAAc,EAAE;AAFb,GAAP;AAIH;;AAAA;;AAED,SAASX,gBAAT,GAA4B;AACxB,SAAO;AACHM,IAAAA,QAAQ,EAAEhB,GAAG,CAACsB,MAAJ,GACLC,QADK,CACI,IADJ,CADP;AAGHF,IAAAA,cAAc,EAAErB,GAAG,CAACsB,MAAJ,GACXC,QADW;AAHb,GAAP;AAMH;;AAAA","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { updatePasswordApi } from '../../../api/user';\r\n\r\nexport default function ChangePasswordForm({ user, logout }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema()),\r\n        onSubmit: async (formData) => {\r\n            setLoading(true);\r\n            const response = await updatePasswordApi(user.id, formData.password, logout)\r\n            if (response)\r\n                setLoading(false)\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"change-password-form\">\r\n            <h4>Cambia tu contraseña</h4>\r\n            <Form onSubmit={formik.handleSubmit}>\r\n                <Form.Group widths=\"equal\">\r\n                    <Form.Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Nueva contraseña\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                        error={formik.errors.password}\r\n                    />\r\n                    <Form.Input\r\n                        name=\"repeatEmail\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirma tu nueva contraseña\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.repeatPassword}\r\n                        error={formik.errors.repeatPassword}\r\n                    />\r\n                </Form.Group>\r\n                <Button className=\"submit\" loading={loading} disabled={loading}>Actualizar</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction initialValues() {\r\n    return {\r\n        password: \"\",\r\n        repeatPassword: \"\"\r\n    };\r\n};\r\n\r\nfunction validationSchema() {\r\n    return {\r\n        password: Yup.string()\r\n            .required(true),\r\n        repeatPassword: Yup.string()\r\n            .required()\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}