{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\ecomemrce-next\\\\client\\\\components\\\\Auth\\\\RegisterForm\\\\RegisterForm.js\";\nimport { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerApi } from '../../../api/user';\nexport default function RegisterForm({\n  showLoginForm\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await registerApi(formData);\n      console.log(response);\n\n      if (response === null || response === void 0 ? void 0 : response.jwt) {\n        showLoginForm();\n      } else {\n        console.log(\"Error al registrar el usuario\");\n      }\n\n      setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Nombre\",\n      onChange: formik.handleChange,\n      error: formik.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"lastname\",\n      type: \"text\",\n      placeholder: \"Apellidos\",\n      onChange: formik.handleChange,\n      error: formik.errors.lastname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Nombre de usuario\",\n      onChange: formik.handleChange,\n      error: formik.errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Correo Electronico\",\n      onChange: formik.handleChange,\n      error: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: formik.handleChange,\n      error: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"submit\",\n        loading: loading,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\nfunction initialValues() {\n  return {\n    name: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    name: Yup.string().required(true),\n    lastname: Yup.string().required(true),\n    username: Yup.string().required(true),\n    email: Yup.string().email(true).required(true),\n    password: Yup.string().required(true)\n  };\n}","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/components/Auth/RegisterForm/RegisterForm.js"],"names":["useState","Form","Button","useFormik","Yup","registerApi","RegisterForm","showLoginForm","loading","setLoading","formik","initialValues","validationSchema","object","onSubmit","formData","response","console","log","jwt","handleSubmit","handleChange","errors","name","lastname","username","email","password","string","required"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerApi } from '../../../api/user';\r\n\r\nexport default function RegisterForm({ showLoginForm }) {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema()),\r\n        onSubmit: async (formData) => {\r\n            setLoading(true);\r\n            const response = await registerApi(formData);\r\n            console.log(response);\r\n            if (response?.jwt) {\r\n                showLoginForm();\r\n\r\n            } else {\r\n                console.log(\"Error al registrar el usuario\")\r\n            }\r\n            setLoading(false);\r\n        }\r\n    })\r\n    return (\r\n        <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\r\n            <Form.Input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.name}\r\n            />\r\n            <Form.Input\r\n                name=\"lastname\"\r\n                type=\"text\"\r\n                placeholder=\"Apellidos\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.lastname}\r\n            />\r\n            <Form.Input\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre de usuario\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.username}\r\n            />\r\n            <Form.Input\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Correo Electronico\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.email}\r\n            />\r\n            <Form.Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.password}\r\n            />\r\n            <div className=\"actions\">\r\n                <Button type=\"button\" basic>Iniciar Sesión</Button>\r\n                <Button type=\"submit\" className=\"submit\" loading={loading} >Registrar</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nfunction initialValues() {\r\n    return {\r\n        name: \"\",\r\n        lastname: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n}\r\n\r\nfunction validationSchema() {\r\n    return {\r\n        name: Yup.string().required(true),\r\n        lastname: Yup.string().required(true),\r\n        username: Yup.string().required(true),\r\n        email: Yup.string().email(true).required(true),\r\n        password: Yup.string().required(true)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}