{"ast":null,"code":"import { BASE_PATH } from '../utils/constants';\nimport { authFetch } from '../utils/fetch';\nexport async function registerApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function loginApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function resetPasswordApi(email) {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getMeApi(logout) {\n  try {\n    const url = `${BASE_PATH}/users/me`;\n    const result = await authFetch(url, null, logout);\n    return result ? result : null;\n  } catch (error) {\n    return null;\n  }\n}\nexport async function updateNameApi(idUser, data, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function updateEmailApi(idUser, email, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function updatePasswordApi(idUser, password, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      })\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/api/user.js"],"names":["BASE_PATH","authFetch","registerApi","formData","url","params","method","headers","body","JSON","stringify","response","fetch","result","json","error","console","log","loginApi","resetPasswordApi","email","getMeApi","logout","updateNameApi","idUser","data","updateEmailApi","updatePasswordApi","password"],"mappings":"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","sourcesContent":["import { BASE_PATH } from '../utils/constants'\r\nimport { authFetch } from '../utils/fetch';\r\nexport async function registerApi(formData) {\r\n    try {\r\n        const url = `${BASE_PATH}/auth/local/register`;\r\n        const params = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(formData)\r\n        };\r\n        const response = await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function loginApi(formData) {\r\n    try {\r\n        const url = `${BASE_PATH}/auth/local`;\r\n        const params = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n            body: JSON.stringify(formData),\r\n        };\r\n        const response = await fetch(url, params)\r\n        const result = await response.json()\r\n        return result;\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function resetPasswordApi(email) {\r\n    try {\r\n        const url = `${BASE_PATH}/auth/forgot-password`;\r\n        const params = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email })\r\n        }\r\n        const response = await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getMeApi(logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/users/me`;\r\n        const result = await authFetch(url, null, logout);\r\n        return result ? result : null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function updateNameApi(idUser, data, logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/users/${idUser}`\r\n        const params = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const result = await authFetch(url, params, logout)\r\n        return result ? result : null;\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function updateEmailApi(idUser, email, logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/users/${idUser}`\r\n        const params = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({email})\r\n        };\r\n        const result = await authFetch(url, params, logout)\r\n        return result ? result : null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport async function updatePasswordApi(idUser, password, logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/users/${idUser}`\r\n        const params = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({password})\r\n        };\r\n        const result = await authFetch(url, params, logout)\r\n        return result ? result : null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}