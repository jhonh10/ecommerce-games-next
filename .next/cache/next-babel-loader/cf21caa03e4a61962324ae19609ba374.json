{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\Proyectos React\\\\ecomemrce-next\\\\client\\\\components\\\\Cart\\\\Payment\\\\FormPayment\\\\FormPayment.js\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button } from 'semantic-ui-react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { toast } from 'react-toastify';\nimport { size } from 'lodash';\nimport useAuth from '../../../../hooks/useAuth';\nimport useCart from '../../../../hooks/useCart';\nimport { paymentCardApi } from '../../../../api/cart';\nexport default function FormPayment({\n  adress,\n  products\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    auth,\n    logout\n  } = useAuth();\n  const {\n    removeAllProductsCart\n  } = useCart();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    const result = await stripe.createToken(cardElement);\n\n    if (result.error) {\n      toast.error(result.error.message);\n    } else {\n      const response = await paymentCardApi(result.token, products, auth.idUser, adress, logout);\n\n      if (size(response) > 0) {\n        toast.success(\"Pedido realizado correctamente\");\n      } else {\n        toast.error(\"Error al realizar el pedido\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-payment\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      loading: loading,\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/components/Cart/Payment/FormPayment/FormPayment.js"],"names":["useState","useRouter","Button","CardElement","useStripe","useElements","toast","size","useAuth","useCart","paymentCardApi","FormPayment","adress","products","loading","setLoading","stripe","elements","auth","logout","removeAllProductsCart","handleSubmit","e","preventDefault","cardElement","getElement","result","createToken","error","message","response","token","idUser","success"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAGA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAArB,EAA2C;AACtD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBX,OAAO,EAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAA4BX,OAAO,EAAzC;;AAEA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAI,CAACC,MAAD,IAAW,CAACC,QAAhB,EAA0B;AAE1B,UAAMO,WAAW,GAAGP,QAAQ,CAACQ,UAAT,CAAoBtB,WAApB,CAApB;AACA,UAAMuB,MAAM,GAAG,MAAMV,MAAM,CAACW,WAAP,CAAmBH,WAAnB,CAArB;;AACA,QAAIE,MAAM,CAACE,KAAX,EAAkB;AACdtB,MAAAA,KAAK,CAACsB,KAAN,CAAYF,MAAM,CAACE,KAAP,CAAaC,OAAzB;AACH,KAFD,MAEO;AACH,YAAMC,QAAQ,GAAG,MAAMpB,cAAc,CACjCgB,MAAM,CAACK,KAD0B,EAEjClB,QAFiC,EAGjCK,IAAI,CAACc,MAH4B,EAIjCpB,MAJiC,EAKjCO,MALiC,CAArC;;AAOA,UAAIZ,IAAI,CAACuB,QAAD,CAAJ,GAAiB,CAArB,EAAwB;AACpBxB,QAAAA,KAAK,CAAC2B,OAAN,CAAc,gCAAd;AACH,OAFD,MAEO;AACH3B,QAAAA,KAAK,CAACsB,KAAN,CAAY,6BAAZ;AACH;AACJ;;AACDb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAxBD;;AAyBA,sBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEM,YAAzC;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEP,OAA/B;AAAwC,MAAA,QAAQ,EAAE,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH","sourcesContent":["import { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { toast } from 'react-toastify';\r\nimport { size } from 'lodash';\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useCart from '../../../../hooks/useCart';\r\nimport { paymentCardApi } from '../../../../api/cart';\r\n\r\n\r\nexport default function FormPayment({ adress, products }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const { auth, logout } = useAuth();\r\n    const { removeAllProductsCart } = useCart();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(cardElement);\r\n        if (result.error) {\r\n            toast.error(result.error.message)\r\n        } else {\r\n            const response = await paymentCardApi(\r\n                result.token,\r\n                products,\r\n                auth.idUser,\r\n                adress,\r\n                logout\r\n            );\r\n            if (size(response) > 0) {\r\n                toast.success(\"Pedido realizado correctamente\")\r\n            } else {\r\n                toast.error(\"Error al realizar el pedido\")\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <form className=\"form-payment\" onSubmit={handleSubmit}>\r\n            <CardElement />\r\n            <Button type=\"submit\" loading={loading} disabled={!stripe}>Pagar</Button>\r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}