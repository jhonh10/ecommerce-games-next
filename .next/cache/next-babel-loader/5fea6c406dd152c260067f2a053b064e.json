{"ast":null,"code":"import { BASE_PATH } from '../utils/constants';\nimport { authFetch } from '../utils/fetch';\nimport { size } from 'lodash';\nexport async function isFavoriteApi(idUser, idGame, logout) {\n  try {\n    const url = `${BASE_PATH}/favorites?user=${idUser}&game=${idGame}`;\n    return await authFetch(url, null, logout);\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function addFavoriteApi(idUser, idGame, logout) {\n  try {\n    const dataFound = await isFavoriteApi(idUser, idGame, logout);\n\n    if (size(dataFound) > 0 || !dataFound) {\n      return \"Ya esta en favoritos\";\n    } else {\n      const url = `${BASE_PATH}/favorites`;\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: idUser,\n          game: idGame\n        })\n      };\n      const result = await authFetch(url, params, logout);\n      return result;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function deleteFavoriteApi(iduser, idGame, logout) {\n  try {\n    const dataFound = await isFavoriteApi(iduser, idGame, logout);\n\n    if (size(dataFound) > 0) {\n      var _dataFound$;\n\n      const url = `${BASE_PATH}/favorites/${(_dataFound$ = dataFound[0]) === null || _dataFound$ === void 0 ? void 0 : _dataFound$._id}`;\n      const params = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const result = authFetch(url, params, logout);\n      return result;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getFavoriteApi(idUser, logout) {\n  try {\n    const url = `${BASE_PATH}/favorites?user=${idUser}`;\n    const result = await authFetch(url, null, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/api/favorite.js"],"names":["BASE_PATH","authFetch","size","isFavoriteApi","idUser","idGame","logout","url","error","console","log","addFavoriteApi","dataFound","params","method","headers","body","JSON","stringify","user","game","result","deleteFavoriteApi","iduser","_id","getFavoriteApi"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAO,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD;AACxD,MAAI;AACA,UAAMC,GAAG,GAAI,GAAEP,SAAU,mBAAkBI,MAAO,SAAQC,MAAO,EAAjE;AACA,WAAO,MAAMJ,SAAS,CAACM,GAAD,EAAM,IAAN,EAAYD,MAAZ,CAAtB;AACH,GAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACH;AACJ;AAED,OAAO,eAAeG,cAAf,CAA8BP,MAA9B,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsD;AACzD,MAAI;AACA,UAAMM,SAAS,GAAG,MAAMT,aAAa,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,CAArC;;AACA,QAAIJ,IAAI,CAACU,SAAD,CAAJ,GAAkB,CAAlB,IAAuB,CAACA,SAA5B,EAAuC;AACnC,aAAO,sBAAP;AACH,KAFD,MAEO;AACH,YAAML,GAAG,GAAI,GAAEP,SAAU,YAAzB;AACA,YAAMa,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFE;AAKXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAEf,MAAR;AAAgBgB,UAAAA,IAAI,EAAEf;AAAtB,SAAf;AALK,OAAf;AAOA,YAAMgB,MAAM,GAAG,MAAMpB,SAAS,CAACM,GAAD,EAAMM,MAAN,EAAcP,MAAd,CAA9B;AACA,aAAOe,MAAP;AACH;AACJ,GAhBD,CAgBE,OAAOb,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACH;AACJ;AAED,OAAO,eAAec,iBAAf,CAAiCC,MAAjC,EAAyClB,MAAzC,EAAiDC,MAAjD,EAAyD;AAC5D,MAAI;AACA,UAAMM,SAAS,GAAG,MAAMT,aAAa,CAACoB,MAAD,EAASlB,MAAT,EAAiBC,MAAjB,CAArC;;AACA,QAAIJ,IAAI,CAACU,SAAD,CAAJ,GAAkB,CAAtB,EAAyB;AAAA;;AACrB,YAAML,GAAG,GAAI,GAAEP,SAAU,cAAb,eAA0BY,SAAS,CAAC,CAAD,CAAnC,gDAA0B,YAAcY,GAAI,EAAxD;AACA,YAAMX,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,QADG;AAEXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFE,OAAf;AAMA,YAAMM,MAAM,GAAGpB,SAAS,CAACM,GAAD,EAAMM,MAAN,EAAcP,MAAd,CAAxB;AACA,aAAOe,MAAP;AACH;AACJ,GAbD,CAaE,OAAOb,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACH;AACJ;AAED,OAAO,eAAeiB,cAAf,CAA8BrB,MAA9B,EAAsCE,MAAtC,EAA8C;AACjD,MAAI;AACA,UAAMC,GAAG,GAAI,GAAEP,SAAU,mBAAkBI,MAAO,EAAlD;AACA,UAAMiB,MAAM,GAAG,MAAMpB,SAAS,CAACM,GAAD,EAAM,IAAN,EAAYD,MAAZ,CAA9B;AACA,WAAOe,MAAP;AACH,GAJD,CAIE,OAAOb,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACH;AACJ","sourcesContent":["import { BASE_PATH } from '../utils/constants';\r\nimport { authFetch } from '../utils/fetch';\r\nimport { size } from 'lodash'\r\n\r\nexport async function isFavoriteApi(idUser, idGame, logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/favorites?user=${idUser}&game=${idGame}`;\r\n        return await authFetch(url, null, logout)\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function addFavoriteApi(idUser, idGame, logout) {\r\n    try {\r\n        const dataFound = await isFavoriteApi(idUser, idGame, logout);\r\n        if (size(dataFound) > 0 || !dataFound) {\r\n            return \"Ya esta en favoritos\"\r\n        } else {\r\n            const url = `${BASE_PATH}/favorites`;\r\n            const params = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ user: idUser, game: idGame })\r\n            };\r\n            const result = await authFetch(url, params, logout)\r\n            return result;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function deleteFavoriteApi(iduser, idGame, logout) {\r\n    try {\r\n        const dataFound = await isFavoriteApi(iduser, idGame, logout);\r\n        if (size(dataFound) > 0) {\r\n            const url = `${BASE_PATH}/favorites/${dataFound[0]?._id}`;\r\n            const params = {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            }\r\n            const result = authFetch(url, params, logout);\r\n            return result;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getFavoriteApi(idUser, logout) {\r\n    try {\r\n        const url = `${BASE_PATH}/favorites?user=${idUser}`;\r\n        const result = await authFetch(url, null, logout);\r\n        return result;\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}