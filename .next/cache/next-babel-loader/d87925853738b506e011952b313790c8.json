{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\Proyectos React\\\\ecomemrce-next\\\\client\\\\components\\\\Cart\\\\Payment\\\\FormPayment\\\\FormPayment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button } from 'semantic-ui-react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { toast } from 'react-toastify';\nimport { size } from 'lodash';\nimport useAuth from '../../../../hooks/useAuth';\nimport useCart from '../../../../hooks/useCart';\nimport { paymentCardApi } from '../../../../api/cart';\nexport default function FormPayment(_ref) {\n  _s();\n\n  var adress = _ref.adress,\n      products = _ref.products;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth,\n      logout = _useAuth.logout;\n\n  var _useCart = useCart(),\n      removeAllProductsCart = _useCart.removeAllProductsCart;\n\n  var router = useRouter();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var cardElement, result, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n\n              if (!(!stripe || !elements)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              cardElement = elements.getElement(CardElement);\n              _context.next = 7;\n              return stripe.createToken(cardElement);\n\n            case 7:\n              result = _context.sent;\n\n              if (!result.error) {\n                _context.next = 12;\n                break;\n              }\n\n              toast.error(result.error.message);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.next = 14;\n              return paymentCardApi(result.token, products, auth.idUser, adress, logout);\n\n            case 14:\n              response = _context.sent;\n\n              if (size(response) > 0) {\n                toast.success(\"Pedido realizado correctamente\");\n                removeAllProductsCart();\n                router.push(\"/orders\");\n              } else {\n                toast.error(\"Error al realizar el pedido\");\n              }\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-payment\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      loading: loading,\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormPayment, \"W0EPUrqZuL5W2tnZ4AOFakAQqOg=\", false, function () {\n  return [useStripe, useElements, useAuth, useCart, useRouter];\n});\n\n_c = FormPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPayment\");","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/Proyectos React/ecomemrce-next/client/components/Cart/Payment/FormPayment/FormPayment.js"],"names":["useState","useRouter","Button","CardElement","useStripe","useElements","toast","size","useAuth","useCart","paymentCardApi","FormPayment","adress","products","loading","setLoading","stripe","elements","auth","logout","removeAllProductsCart","router","handleSubmit","e","preventDefault","cardElement","getElement","createToken","result","error","message","token","idUser","response","success","push"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAGA,eAAe,SAASC,WAAT,OAA2C;AAAA;;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACxBb,QAAQ,CAAC,KAAD,CADgB;AAAA,MAC/Cc,OAD+C;AAAA,MACtCC,UADsC;;AAEtD,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B;;AAHsD,iBAI7BG,OAAO,EAJsB;AAAA,MAI9CU,IAJ8C,YAI9CA,IAJ8C;AAAA,MAIxCC,MAJwC,YAIxCA,MAJwC;;AAAA,iBAKpBV,OAAO,EALa;AAAA,MAK9CW,qBAL8C,YAK9CA,qBAL8C;;AAMtD,MAAMC,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,MAAMqB,YAAY;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACAT,cAAAA,UAAU,CAAC,IAAD,CAAV;;AAFiB,oBAGb,CAACC,MAAD,IAAW,CAACC,QAHC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKXQ,cAAAA,WALW,GAKGR,QAAQ,CAACS,UAAT,CAAoBvB,WAApB,CALH;AAAA;AAAA,qBAMIa,MAAM,CAACW,WAAP,CAAmBF,WAAnB,CANJ;;AAAA;AAMXG,cAAAA,MANW;;AAAA,mBAObA,MAAM,CAACC,KAPM;AAAA;AAAA;AAAA;;AAQbvB,cAAAA,KAAK,CAACuB,KAAN,CAAYD,MAAM,CAACC,KAAP,CAAaC,OAAzB;AARa;AAAA;;AAAA;AAAA;AAAA,qBAUUpB,cAAc,CACjCkB,MAAM,CAACG,KAD0B,EAEjClB,QAFiC,EAGjCK,IAAI,CAACc,MAH4B,EAIjCpB,MAJiC,EAKjCO,MALiC,CAVxB;;AAAA;AAUPc,cAAAA,QAVO;;AAiBb,kBAAI1B,IAAI,CAAC0B,QAAD,CAAJ,GAAiB,CAArB,EAAwB;AACpB3B,gBAAAA,KAAK,CAAC4B,OAAN,CAAc,gCAAd;AACAd,gBAAAA,qBAAqB;AACrBC,gBAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ;AACH,eAJD,MAIO;AACH7B,gBAAAA,KAAK,CAACuB,KAAN,CAAY,6BAAZ;AACH;;AAvBY;AAyBjBd,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAzBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZO,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA2BA,sBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEA,YAAzC;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAER,OAA/B;AAAwC,MAAA,QAAQ,EAAE,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzCuBL,W;UAELP,S,EACEC,W,EACQG,O,EACSC,O,EACnBR,S;;;KANKU,W","sourcesContent":["import { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { toast } from 'react-toastify';\r\nimport { size } from 'lodash';\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useCart from '../../../../hooks/useCart';\r\nimport { paymentCardApi } from '../../../../api/cart';\r\n\r\n\r\nexport default function FormPayment({ adress, products }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const { auth, logout } = useAuth();\r\n    const { removeAllProductsCart } = useCart();\r\n    const router = useRouter();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(cardElement);\r\n        if (result.error) {\r\n            toast.error(result.error.message)\r\n        } else {\r\n            const response = await paymentCardApi(\r\n                result.token,\r\n                products,\r\n                auth.idUser,\r\n                adress,\r\n                logout\r\n            );\r\n            if (size(response) > 0) {\r\n                toast.success(\"Pedido realizado correctamente\");\r\n                removeAllProductsCart();\r\n                router.push(\"/orders\");\r\n            } else {\r\n                toast.error(\"Error al realizar el pedido\")\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <form className=\"form-payment\" onSubmit={handleSubmit}>\r\n            <CardElement />\r\n            <Button type=\"submit\" loading={loading} disabled={!stripe}>Pagar</Button>\r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}