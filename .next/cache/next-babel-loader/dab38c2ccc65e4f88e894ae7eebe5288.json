{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\ecomemrce-next\\\\client\\\\components\\\\Account\\\\ChangeEmailForm\\\\ChangeEmailForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateEmailApi } from '../../../api/user';\nimport { toast } from 'react-toastify';\nexport default function ChangeEmailForm(_ref) {\n  _s();\n\n  var user = _ref.user,\n      logout = _ref.logout,\n      setReloadUser = _ref.setReloadUser;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return updateEmailApi(user.id, formData.email, logout);\n\n              case 3:\n                response = _context.sent;\n\n                if (!response) {\n                  toast.error(\"Error al actualizar el email\");\n                } else {\n                  setReloadUser(true);\n                  toast.success(\"Email actualizado\");\n                  formik.handleReset();\n                }\n\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-email-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Cambia tu e-mail \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(Tu e-mail actual :\", user.email, \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"email\",\n          placeholder: \"Nuevo Email\",\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          error: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"repeatEmail\",\n          placeholder: \"Confirma tu nuevo Email\",\n          onChange: formik.handleChange,\n          value: formik.values.repeatEmail,\n          error: formik.errors.repeatEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit\",\n        loading: loading,\n        disabled: loading,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeEmailForm, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = ChangeEmailForm;\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    repeatEmail: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email(true).required(true).oneOf([Yup.ref(\"repeatEmail\")], true),\n    repeatEmail: Yup.string().email(true).required(true).oneOf([Yup.ref(\"email\")], true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeEmailForm\");","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/components/Account/ChangeEmailForm/ChangeEmailForm.js"],"names":["useState","Form","Button","useFormik","Yup","updateEmailApi","toast","ChangeEmailForm","user","logout","setReloadUser","loading","setLoading","formik","initialValues","validationSchema","object","onSubmit","formData","id","email","response","error","success","handleReset","handleSubmit","handleChange","values","errors","repeatEmail","string","required","oneOf","ref"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateEmailApi } from '../../../api/user';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function ChangeEmailForm({ user, logout, setReloadUser }) {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema()),\r\n        onSubmit: async (formData) => {\r\n            setLoading(true)\r\n            const response = await updateEmailApi(user.id, formData.email, logout)\r\n            if (!response) {\r\n                toast.error(\"Error al actualizar el email\")\r\n            } else {\r\n                setReloadUser(true);\r\n                toast.success(\"Email actualizado\");\r\n                formik.handleReset();\r\n\r\n            }\r\n            setLoading(false)\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"change-email-form\">\r\n            <h4>Cambia tu e-mail <span>(Tu e-mail actual :{user.email} )</span></h4>\r\n            <Form onSubmit={formik.handleSubmit}>\r\n                <Form.Group widths=\"equal\">\r\n                    <Form.Input\r\n                        name=\"email\"\r\n                        placeholder=\"Nuevo Email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                        error={formik.errors.email}\r\n                    />\r\n                    <Form.Input\r\n                        name=\"repeatEmail\"\r\n                        placeholder=\"Confirma tu nuevo Email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.repeatEmail}\r\n                        error={formik.errors.repeatEmail}\r\n                    />\r\n                </Form.Group>\r\n                <Button className=\"submit\" loading={loading} disabled={loading}>Actualizar</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction initialValues() {\r\n    return {\r\n        email: \"\",\r\n        repeatEmail: \"\"\r\n    }\r\n}\r\n\r\nfunction validationSchema() {\r\n    return {\r\n        email: Yup.string()\r\n            .email(true)\r\n            .required(true)\r\n            .oneOf([Yup.ref(\"repeatEmail\")], true),\r\n        repeatEmail: Yup.string()\r\n            .email(true)\r\n            .required(true)\r\n            .oneOf([Yup.ref(\"email\")], true)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}