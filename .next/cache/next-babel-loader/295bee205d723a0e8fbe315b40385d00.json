{"ast":null,"code":"import _defineProperty from \"C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica Palacios\\\\Desktop\\\\ecomemrce-next\\\\client\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo, useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport jwtDecode from 'jwt-decode';\nimport { useRouter, useRouterf } from 'next/router';\nimport AuthContext from '../context/AuthContext';\nimport { setToken, getToken, removeToken } from '../api/token';\nimport \"../scss/global.scss\";\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default function MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(undefined),\n      auth = _useState[0],\n      setAuth = _useState[1];\n\n  var _useState2 = useState(false),\n      reloadUser = _useState2[0],\n      setReloadUser = _useState2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var token = getToken();\n\n    if (token) {\n      setAuth({\n        token: token,\n        idUser: jwtDecode(token).id\n      });\n    } else {\n      setAuth(null);\n    }\n\n    setReloadUser(false);\n  }, [reloadUser]);\n\n  var login = function login(token) {\n    setToken(token);\n    setAuth({\n      token: token,\n      idUser: jwtDecode(token).id\n    });\n  };\n\n  var logout = function logout() {\n    if (auth) {\n      removeToken();\n      setAuth(null);\n      router.push(\"/\");\n    }\n  };\n\n  var authData = useMemo(function () {\n    return {\n      auth: auth,\n      login: login,\n      logout: logout,\n      setReloadUser: setReloadUser\n    };\n  }, [auth]);\n  if (auth === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authData,\n    children: [/*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: false,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyApp, \"gRYzC723g2J9xjIQEp8/24p+wOg=\", false, function () {\n  return [useRouter];\n});\n\n_c = MyApp;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Jessica Palacios/Desktop/ecomemrce-next/client/pages/_app.js"],"names":["useMemo","useState","useEffect","ToastContainer","jwtDecode","useRouter","useRouterf","AuthContext","setToken","getToken","removeToken","MyApp","Component","pageProps","undefined","auth","setAuth","reloadUser","setReloadUser","router","token","idUser","id","login","logout","push","authData"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,aAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,cAAhD;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,OAAO,uCAAP;AAEA,eAAe,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAC5BZ,QAAQ,CAACa,SAAD,CADoB;AAAA,MAC7CC,IAD6C;AAAA,MACvCC,OADuC;;AAAA,mBAEhBf,QAAQ,CAAC,KAAD,CAFQ;AAAA,MAE7CgB,UAF6C;AAAA,MAEjCC,aAFiC;;AAGpD,MAAMC,MAAM,GAAGd,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMkB,KAAK,GAAGX,QAAQ,EAAtB;;AACA,QAAIW,KAAJ,EAAW;AACPJ,MAAAA,OAAO,CAAC;AACJI,QAAAA,KAAK,EAALA,KADI;AAEJC,QAAAA,MAAM,EAAEjB,SAAS,CAACgB,KAAD,CAAT,CAAiBE;AAFrB,OAAD,CAAP;AAIH,KALD,MAKO;AACHN,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AACDE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAXQ,EAWN,CAACD,UAAD,CAXM,CAAT;;AAaA,MAAMM,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAW;AACrBZ,IAAAA,QAAQ,CAACY,KAAD,CAAR;AACAJ,IAAAA,OAAO,CAAC;AACJI,MAAAA,KAAK,EAALA,KADI;AAEJC,MAAAA,MAAM,EAAEjB,SAAS,CAACgB,KAAD,CAAT,CAAiBE;AAFrB,KAAD,CAAP;AAIH,GAND;;AAQA,MAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,QAAIT,IAAJ,EAAU;AACNL,MAAAA,WAAW;AACXM,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACH;AACJ,GAND;;AAQA,MAAMC,QAAQ,GAAG1B,OAAO,CAAC;AAAA,WAAO;AAC5Be,MAAAA,IAAI,EAAJA,IAD4B;AAE5BQ,MAAAA,KAAK,EAALA,KAF4B;AAG5BC,MAAAA,MAAM,EAANA,MAH4B;AAI5BN,MAAAA,aAAa,EAAbA;AAJ4B,KAAP;AAAA,GAAD,EAKpB,CAACH,IAAD,CALoB,CAAxB;AAOA,MAAIA,IAAI,KAAKD,SAAb,EAAwB,OAAO,IAAP;AAExB,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEY,QAA7B;AAAA,4BACI,QAAC,SAAD,oBAAeb,SAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAC,WADb;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,eAAe,MAHnB;AAII,MAAA,WAAW,MAJf;AAKI,MAAA,YAAY,MALhB;AAMI,MAAA,GAAG,EAAE,KANT;AAOI,MAAA,gBAAgB,EAAE,KAPtB;AAQI,MAAA,SAAS,MARb;AASI,MAAA,YAAY;AAThB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA3DuBF,K;UAGLN,S;;;KAHKM,K;AA2DvB","sourcesContent":["import { useMemo, useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport jwtDecode from 'jwt-decode';\r\nimport {useRouter, useRouterf} from 'next/router'\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setToken, getToken, removeToken } from '../api/token';\r\nimport \"../scss/global.scss\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function MyApp({ Component, pageProps }) {\r\n    const [auth, setAuth] = useState(undefined);\r\n    const [reloadUser, setReloadUser] = useState(false);\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (token) {\r\n            setAuth({\r\n                token,\r\n                idUser: jwtDecode(token).id\r\n            })\r\n        } else {\r\n            setAuth(null);\r\n        }\r\n        setReloadUser(false);\r\n    }, [reloadUser])\r\n\r\n    const login = (token) => {\r\n        setToken(token);\r\n        setAuth({\r\n            token,\r\n            idUser: jwtDecode(token).id\r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        if (auth) {\r\n            removeToken();\r\n            setAuth(null);\r\n            router.push(\"/\")\r\n        }\r\n    }\r\n\r\n    const authData = useMemo(() => ({\r\n        auth,\r\n        login,\r\n        logout,\r\n        setReloadUser,\r\n    }), [auth]);\r\n\r\n    if (auth === undefined) return null;\r\n\r\n    return (\r\n        <AuthContext.Provider value={authData}>\r\n            <Component {...pageProps} />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}