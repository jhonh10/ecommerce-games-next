{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport useAuth from '../../../hooks/useAuth';\nimport { loginApi, resetPasswordApi } from '../../../api/user';\nexport default function LoginForm({\n  showRegisterForm,\n  onCloseModal\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    login\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await loginApi(formData);\n\n      if (response === null || response === void 0 ? void 0 : response.jwt) {\n        await login(response.jwt);\n        onCloseModal();\n      } else {\n        toast.error(\"Email o contraseÃ±a incorrecto\");\n      }\n\n      setLoading(false);\n    }\n  });\n\n  const resetPassword = () => {\n    formik.setErrors({});\n    const validateEmail = Yup.string().email().required();\n\n    if (!validateEmail.isValidSync(formik.values.identifier)) {\n      formik.setErrors({\n        identifier: true\n      });\n    } else {\n      resetPasswordApi(formik.values.identifier);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Form, {\n    className: \"login-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsx(Form.Input, {\n      name: \"identifier\",\n      type: \"text\",\n      placeholder: \"Correo Electronico\",\n      onChange: formik.handleChange,\n      error: formik.errors.identifier\n    }), /*#__PURE__*/_jsx(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: formik.handleChange,\n      error: formik.errors.password\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"button\",\n        basic: true,\n        onClick: showRegisterForm,\n        children: \"Registrarse\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Button, {\n          className: \"submit\",\n          type: \"submit\",\n          loading: loading,\n          disabled: loading,\n          children: \"Iniciar Sesi\\xF3n\"\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"button\",\n          onClick: resetPassword,\n          children: \"\\xBFHas olvidado la contrase\\xF1a?\"\n        })]\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    identifier: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    identifier: Yup.string().email(true).required(true),\n    password: Yup.string().required(true)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}